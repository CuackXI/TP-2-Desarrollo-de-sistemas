generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum RolUsuario {
  ADMIN
  CLIENTE
}

model Usuario {
  id          Int        @id @default(autoincrement())
  nombre      String     @unique
  correo      String     @unique
  telefono    String     @unique
  direccion   String
  contraseña  String
  rol         RolUsuario @default(CLIENTE)
  pedidos     Pedido[]
  reservas    Reserva[]
}

enum CategoriaPlato {
  ENTRADA
  PRINCIPAL
  POSTRE
}

model Plato {
  id         Int       @id @default(autoincrement())
  nombre     String
  descripcion String
  precio     Int
  categoria  CategoriaPlato
  pedidos    PedidoPlato[]
}

model Mesa {
  id        Int       @id @default(autoincrement())
  numero    Int       @unique 
  disponible Boolean @default(true)
  reservas  Reserva[]
}

model Reserva {
  id        Int      @id @default(autoincrement())
  usuario   Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  usuarioId Int
  mesa      Mesa     @relation(fields: [mesaId], references: [id], onDelete: Cascade)
  mesaId    Int
}

model Pedido {
  id          Int            @id @default(autoincrement())
  usuario     Usuario        @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  usuarioId   Int
  platos      PedidoPlato[]
  estado      EstadoPedido   @default(PENDIENTE)
  domicilio   String         @default("Sin información")
  subtotal    Int
  total       Decimal
  descuento   Int?
  creadoEn    DateTime       @default(now())
}

model PedidoPlato {
  id        Int     @id @default(autoincrement())
  pedido    Pedido  @relation(fields: [pedidoId], references: [id], onDelete: Cascade)
  pedidoId  Int
  plato     Plato   @relation(fields: [platoId], references: [id])
  platoId   Int
  cantidad  Int
}

enum EstadoPedido {
  PENDIENTE
  EN_COCINA
  ENVIADO
}
